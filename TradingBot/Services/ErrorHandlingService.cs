using System;
using System.Collections.Generic;
using Microsoft.Extensions.Logging;

namespace TradingBot.Services
{
    /// <summary>
    /// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    /// </summary>
    public class ErrorHandlingService
    {
        private readonly ILogger<ErrorHandlingService> _logger;
        private readonly Dictionary<Type, string> _userFriendlyMessages;

        public ErrorHandlingService(ILogger<ErrorHandlingService> logger)
        {
            _logger = logger;
            _userFriendlyMessages = InitializeUserFriendlyMessages();
        }

        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
        /// </summary>
        private Dictionary<Type, string> InitializeUserFriendlyMessages()
        {
            return new Dictionary<Type, string>
            {
                { typeof(ArgumentException), "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é." },
                { typeof(InvalidOperationException), "‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." },
                { typeof(UnauthorizedAccessException), "üîí –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞." },
                { typeof(System.Net.Http.HttpRequestException), "üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É." },
                { typeof(System.Threading.Tasks.TaskCanceledException), "‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑." },
                { typeof(System.Text.Json.JsonException), "üìù –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ." },
                { typeof(System.IO.IOException), "üíæ –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤." },
                { typeof(Microsoft.Data.Sqlite.SqliteException), "üóÑÔ∏è –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." }
            };
        }

        /// <summary>
        /// –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        /// </summary>
        public string GetUserFriendlyMessage(Exception exception, string language = "ru")
        {
            if (exception == null) return GetDefaultMessage(language);

            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            _logger.LogError(exception, "–û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {Message}", exception.Message);

            // –ò—â–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
            var exceptionType = exception.GetType();
            if (_userFriendlyMessages.TryGetValue(exceptionType, out var message))
            {
                return message;
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã
            foreach (var kvp in _userFriendlyMessages)
            {
                if (exceptionType.IsSubclassOf(kvp.Key))
                {
                    return kvp.Value;
                }
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
            var errorMessage = exception.Message.ToLowerInvariant();
            if (errorMessage.Contains("notion") || errorMessage.Contains("api"))
            {
                return language == "ru" 
                    ? "üåê –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Notion. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è." 
                    : "üåê Notion integration error. Check connection settings.";
            }
            
            if (errorMessage.Contains("database") || errorMessage.Contains("–±–∞–∑–∞"))
            {
                return language == "ru" 
                    ? "üóÑÔ∏è –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." 
                    : "üóÑÔ∏è Database error. Try again later.";
            }
            
            if (errorMessage.Contains("network") || errorMessage.Contains("—Å–µ—Ç—å"))
            {
                return language == "ru" 
                    ? "üåê –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É." 
                    : "üåê Network error. Check internet connection.";
            }

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            return GetDefaultMessage(language);
        }

        /// <summary>
        /// –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
        /// </summary>
        private string GetDefaultMessage(string language)
        {
            return language == "ru" 
                ? "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ." 
                : "‚ö†Ô∏è An error occurred. Try again or contact support.";
        }

        /// <summary>
        /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        /// </summary>
        public string HandleException(Exception exception, string language = "ru", bool includeTechnicalDetails = false)
        {
            var userMessage = GetUserFriendlyMessage(exception, language);
            
            if (includeTechnicalDetails && exception != null)
            {
                // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
                var technicalInfo = $"\n\nüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {exception.GetType().Name}";
                if (!string.IsNullOrEmpty(exception.Message))
                {
                    technicalInfo += $"\nüí¨ {exception.Message}";
                }
                userMessage += technicalInfo;
            }
            
            return userMessage;
        }

        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π
        /// </summary>
        public bool IsCriticalError(Exception exception)
        {
            if (exception == null) return false;

            var criticalTypes = new[]
            {
                typeof(System.OutOfMemoryException),
                typeof(System.StackOverflowException),
                typeof(System.Threading.ThreadAbortException)
            };

            var exceptionType = exception.GetType();
            return Array.Exists(criticalTypes, t => t == exceptionType || exceptionType.IsSubclassOf(t));
        }

        /// <summary>
        /// –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –æ—à–∏–±–∫–∏
        /// </summary>
        public List<string> GetTroubleshootingTips(Exception exception, string language = "ru")
        {
            var tips = new List<string>();
            
            if (exception == null) return tips;

            var errorMessage = exception.Message.ToLowerInvariant();
            
            if (errorMessage.Contains("notion") || errorMessage.Contains("api"))
            {
                if (language == "ru")
                {
                    tips.Add("üîë –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏");
                    tips.Add("üóÑÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞");
                    tips.Add("üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
                }
                else
                {
                    tips.Add("üîë Check integration token validity");
                    tips.Add("üóÑÔ∏è Ensure database exists and is accessible");
                    tips.Add("üîó Verify integration access rights to database");
                }
            }
            else if (errorMessage.Contains("database") || errorMessage.Contains("–±–∞–∑–∞"))
            {
                if (language == "ru")
                {
                    tips.Add("üíæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö");
                    tips.Add("üîí –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∞—Ö –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É");
                    tips.Add("üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
                }
                else
                {
                    tips.Add("üíæ Check database file accessibility");
                    tips.Add("üîí Verify file access permissions");
                    tips.Add("üîÑ Try restarting the application");
                }
            }
            else if (errorMessage.Contains("network") || errorMessage.Contains("—Å–µ—Ç—å"))
            {
                if (language == "ru")
                {
                    tips.Add("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É");
                    tips.Add("üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É");
                    tips.Add("‚è∞ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞");
                }
                else
                {
                    tips.Add("üåê Check internet connection");
                    tips.Add("üîÑ Try refreshing the page");
                    tips.Add("‚è∞ Wait a few minutes and try again");
                }
            }

            return tips;
        }
    }
}
